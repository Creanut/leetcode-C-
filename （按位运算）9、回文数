/*
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
进阶:

你能不将整数转为字符串来解决这个问题吗？
*/

bool isPalindrome(int x) 
{
    if(x < 0)
        return false;
    if(x == 0)
        return true;

    long tmp = 0;
    int s = x;
    while(s > 0)
    {
        tmp = tmp * 10 + s % 10;
        s /= 10;
    }
    return tmp == x;
}

/*
这道题的思路和整数反转的思路一致，只需要考虑负整数肯定不是回文数就行。
判断是不是回文数，只需要把整数反转之后与原数字对比判断二者是否相同就行了，核心代码不变。
*/
