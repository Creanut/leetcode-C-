/*
在无限的整数序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...中找到第 n 个数字。

注意:
n 是正数且在32为整形范围内 ( n < 231)。

示例 1:

输入:
3

输出:
3
示例 2:

输入:
11

输出:
0

说明:
第11个数字在序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 里是0，它是10的一部分。
*/

int findNthDigit(int n) 
{
    long long num = 9;
    int count = 1;

    // 算出是哪个区间
    while (n - num*count > 0) {
        n -= num*count;
        num *= 10;
        count++;
    }

    n--;
    num = n/count + num/9; // 区间内哪个数
    int pos = count - n % count; // 这个数的第几位

    int result;
    while (pos--) 
    {
        result = num % 10;
        num /= 10;
    }
    return result;
}

/*
参考博客：
https://blog.csdn.net/qq_41855420/article/details/88661903
*/
