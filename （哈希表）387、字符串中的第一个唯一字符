/*
给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。

案例:

s = "leetcode"
返回 0.

s = "loveleetcode",
返回 2.
 

注意事项：您可以假定该字符串只包含小写字母。
*/

int firstUniqChar(char* s) 
{
    int s_hash[26] = {0};
    int s_len = strlen(s);
    int result = -1;
    
    for(int i = 0; i < s_len; i++)
    {
        s_hash[s[i] - 'a']++;
    }
    
    for(int i = 0; i < s_len; i++)
    {
        if(s_hash[s[i] - 'a'] == 1)
        {
            result = i;
            break;
        }
    }
    return result;
}

/*
这类题目的本质就是记录给定字符串中每个字符出现的频次，
所以使用C语言最容易理解的方法就是构建哈希表。
首先遍历字符串，将字符串中出现的字符以及其所出现的次数记录下来构建一个哈希表（字典）；
然后再遍历字符串，查找每个字符在字典中出现的频次，遍历中
一旦遇到其所对应的频次为1，这就说明它是第一个唯一字符，直接返回其下标即可。
//构建字典的过程：
for(int i = 0; i < s_len; i++)
{
    s_hash[s[i] - 'a']++;
}
//查字典的过程：    
for(int i = 0; i < s_len; i++)
{
    if(s_hash[s[i] - 'a'] == 1)
    {
        result = i;
        break;
    }
}
*/
