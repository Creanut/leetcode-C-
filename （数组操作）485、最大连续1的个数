/*
给定一个二进制数组， 计算其中最大连续1的个数。
示例 1:
输入: [1,1,0,1,1,1]
输出: 3
解释: 开头的两位和最后的三位都是连续1，所以最大连续1的个数是 3.
注意：
输入的数组只包含 0 和1。
输入数组的长度是正整数，且不超过 10,000。
*/

int findMaxConsecutiveOnes(int* nums, int numsSize)
{
    int cnt = 0;
    int max = 0;
    
    for(int i = 0; i < numsSize; i++)
    {
        if(nums[i] == 1)
        {
            cnt++;
            max = cnt > max ? cnt : max;
        }
        else
            cnt = 0;
    }
    
    return max;
}

/*
设置数字1计数器，如果遍历过程中遇到1，则进行累加，并将累加结果和max比较，实时更新max的值。
如果遇见0，则连续1计数器清零。
*/
