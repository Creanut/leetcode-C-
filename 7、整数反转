/*
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
*/

int reverse(int x) 
{
    long reverse = 0;
    while(x)
    {
        int temp = reverse * 10;
        if(temp / 10 != reverse)
            return 0;
        reverse = temp;
        reverse += x % 10;
        x /= 10;
    }
    return reverse;
}

/*
整数反转中最常用的程序段是：
int tmp = num;//先暂存需要反转的数字
long res = 0;//初始化一个长整形的变量用来表示反转后的数字

while(num)
{
  tmp = res * 10;//逐渐把低位数字挪到高位上去，以实现反转。（最低位数字在下一步被分离出来，从第二轮迭代开始，这个数字的级数每迭代一次就会升一级，类似于队列的思想，
  先进入的一直在对头，下面只要保证最低位的数字先进入队列就行了。）
  res = tmp + num % 10;//num % 10的操作目的是把目前最低位的数字给分离出来
  num /= 10;//目的是去掉最低位被分离出来的数字之后，构建一个新的数字，新数字的最低位即是下一次迭代中需要被分离出来的数字
}
*/
