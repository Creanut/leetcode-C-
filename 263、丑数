/*
编写一个程序判断给定的数是否为丑数。

丑数就是只包含质因数 2, 3, 5 的正整数。

示例 1:

输入: 6
输出: true
解释: 6 = 2 × 3
示例 2:

输入: 8
输出: true
解释: 8 = 2 × 2 × 2
示例 3:

输入: 14
输出: false 
解释: 14 不是丑数，因为它包含了另外一个质因数 7。
说明：

1 是丑数。
输入不会超过 32 位有符号整数的范围: [−2^31,  2^31 − 1]。
*/

bool isUgly(int num) 
{
    if(num < 1)
        return false;
    
    while(num != 1)
    {
        if(num % 2 == 0)
            num = num / 2;
        else if(num % 3 == 0)
            num = num / 3;
        else if(num % 5 == 0)
            num = num / 5;
        else 
            return false;
    }
    return true;
}

/*
这是一道数学题，比单纯的质因数分解还要简单一些，因为题目中说丑数的质因数分解中只包含
2，3，5三个质数，所以只需要把所给的数字不断拿这三个数除就行，直到除尽为止。
如果在计算过程中出现不能被这三个质数除尽的情况，则说明原数的质因子包含其他数字，
返回false即可，否则，一除到底，返回true。
*/
