/*
两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。

给出两个整数 x 和 y，计算它们之间的汉明距离。

注意：
0 ≤ x, y < 231.

示例:

输入: x = 1, y = 4

输出: 2

解释:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

上面的箭头指出了对应二进制位不同的位置。
*/

int hammingDistance(int x, int y)
{
    int dist = 0;
    int val = x ^ y;
    
    while(val)
    {
        dist++;
        val &= val - 1;
    }
    
    return dist;
}

/*
汉明距离的定义就是：
两个二进制数中，位数不同的位的个数。
位运算解决：
1、计算两个数的异或，不同位异或结果为1；
2、统计结果中的1的个数：
这里使用的位运算的技巧是val&(val-1)
【得到的结果相当于把整数的二进制表示中最右边的1变为了0，
直到所得结果为0，说明没有1了，则&运算的次数就是1的个数。】
*/
