/*
给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。

你可以按任意顺序返回答案。

 

示例 1：

输入：["bella","label","roller"]
输出：["e","l","l"]
示例 2：

输入：["cool","lock","cook"]
输出：["c","o"]
 

提示：

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] 是小写字母
*/

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int min(int a,int b)
{
    if(a>b) return b;
    return a;
}

char **commonChars(char **A, int ASize, int *returnSize)
{
    char cnt[26];
    memset(cnt,127,26);
    char current[26] = {0};
    char** result = (char**)malloc(sizeof(char*) * 1000);
    
    for(int i = 0; i < ASize; i++)
    {
        char* p = A[i];
        while(*p != '\0')
        {
            current[*p-'a']++;
            p++;
        }
        for(int j = 0; j < 26; j++)
        {
            cnt[j] = min(cnt[j],current[j]);
            current[j] = 0;
        }
    }
    
    *returnSize = 0;
    
    for(int i = 0; i < 26; i++)
    {
        for(int j = 0; j < cnt[i]; j++)
        {
            result[*returnSize] = malloc(sizeof(char) * 2);
            result[*returnSize][0] = 'a' + i;
            result[*returnSize][1] = '\0';
            *returnSize = *returnSize + 1;
        }
    }
    
    return result;
}
