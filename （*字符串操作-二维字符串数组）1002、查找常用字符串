/*
给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。

你可以按任意顺序返回答案。

 

示例 1：

输入：["bella","label","roller"]
输出：["e","l","l"]
示例 2：

输入：["cool","lock","cook"]
输出：["c","o"]
 

提示：

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] 是小写字母
*/

int min(int a,int b)
{
    if(a>b) return b;
    return a;
}
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
char **commonChars(char **A, int ASize, int *returnSize) {
    char count[26];
    memset(count, 127, 26);//将之后26个设为127
    char now[26] = {0}, *p, **result = malloc(sizeof(char *) * 1000);
    int i, j;
    for (i = 0; i < ASize; i++) {
        p = A[i];
        while (*p != '\0') {
            now[*p - 'a']++;
            p = p + 1; 
        }       
        for (j = 0; j < 26; j++) {
            count[j] = min(count[j], now[j]);
            now[j] = 0; //每次将now还原。
        }       
    }       
    *returnSize = 0;
    //重复字母也要打印
    for (i = 0; i < 26; i++) {
        for (j = 0; j < count[i]; j++) {
            result[*returnSize] = malloc(sizeof(char) * 2);
            result[*returnSize][0] = 'a' + i;
            result[*returnSize][1] = '\0';
            *returnSize += 1;
        }       
    }       

    return result;
}
