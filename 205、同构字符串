/*
给定两个字符串 s 和 t，判断它们是否是同构的。

如果 s 中的字符可以被替换得到 t ，那么这两个字符串是同构的。

所有出现的字符都必须用另一个字符替换，同时保留字符的顺序。两个字符不能映射到同一个字符上，但字符可以映射自己本身。

示例 1:

输入: s = "egg", t = "add"
输出: true
示例 2:

输入: s = "foo", t = "bar"
输出: false
示例 3:

输入: s = "paper", t = "title"
输出: true
说明:
你可以假设 s 和 t 具有相同的长度。
*/

bool isIsomorphic(char* s, char* t) 
{
    int s_hash[256] = {0};
    int t_hash[256] = {0};
    int s_len = strlen(s);
    int t_len = strlen(t);
    
    if(s_len != t_len)
        return false;
    
    for(int i = 0; i < s_len; i++)
    {
        if(s_hash[s[i]] != t_hash[t[i]])
            return false;
        s_hash[s[i]] = i + 1;
        t_hash[t[i]] = i + 1; 
    }
    return true;
}

/*
使用哈希表构建两个字符串之间的互相唯一映射关系。
*/
