/*
给定一个整数 (32 位有符号整数)，请编写一个函数来判断它是否是 4 的幂次方。

示例 1:

输入: 16
输出: true

示例 2:

输入: 5
输出: false

进阶：
你能不使用循环或者递归来完成本题吗？

*/

//循环解法，不断对4求余，直到结果为1
bool isPowerOfFour(int num)
{
    if(num<=0)
    {
        return false;
    }
    if(num==1)//循环的边界条件
    {
        return true;
    }
    while(num!=1)
    {
        if(num%4==0)
          num=(int)(num/4);
        else
          return false;
    }
    return true;
}
/*
这种求余算法是计算这类幂数的常用方法。
*/

//位运算解法
bool isPowerOfFour(int num)
{
     return (num > 0) && (1 << 30) % num == 0 && (num & 0x55555555)==num;
}
/*
对于4的幂，首先它是2的幂的子集，因此在计算2的幂的基础上，再加入限定条件从中筛选出4的幂即可。
(num > 0) && (1 << 30) % num == 0
这个条件是用来计算2的幂的，因为对于2的幂，其二进制表示中只有一位是1，而1<<30则是2的幂中最大的
那个整数，将这个数对num取余如果结果为0，则说明num中只有2作为其因子，因此num是2的幂。

其次，观察4的幂的二进制表示可以发现，其长度总为奇数，也就是说，1的位置总是在奇数位上。
因此如果有一个数的二进制表示只有奇数位上为1，那么这个数和4的幂做与运算，得到的还是4的幂本身。
题目要求的是32位整数，因此这个最大的4的幂的数就是0b1010101010101010101010101010101，这么长看起来很不优雅，
所以我们可以将它转化为16进制表示0x55555555，这样看起来就好多了。将这个最大的4的幂的数与num做与运算，
如果得到的结果还是这个数本身，则说明这个数num中只有4做其因子，因此在2的幂的基础上加上这个条件就可以将
4的幂从2的幂中筛选出来了。
*/
