/*
国际摩尔斯密码定义一种标准编码方式，将每个字母对应于一个由一系列点和短线组成的字符串， 比如: "a" 对应 ".-", "b" 对应 "-...", "c" 对应 "-.-.", 等等。

为了方便，所有26个英文字母对应摩尔斯密码表如下：

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
给定一个单词列表，每个单词可以写成每个字母对应摩尔斯密码的组合。例如，"cab" 可以写成 "-.-..--..."，(即 "-.-." + "-..." + ".-"字符串的结合)。我们将这样一个连接过程称作单词翻译。

返回我们可以获得所有词不同单词翻译的数量。

例如:
输入: words = ["gin", "zen", "gig", "msg"]
输出: 2
解释: 
各单词翻译如下:
"gin" -> "--...-."
"zen" -> "--...-."
"gig" -> "--...--."
"msg" -> "--...--."

共有 2 种不同翻译, "--...-." 和 "--...--.".
 

注意:

单词列表words 的长度不会超过 100。
每个单词 words[i]的长度范围为 [1, 12]。
每个单词 words[i]只包含小写字母。
*/

int uniqueMorseRepresentations(char ** words, int wordsSize)
{
    char translate[100][100] = {0};
    char morse[26][10] = 
    {".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."};
    int i,j;
    int flag = 0,cnt = 0;
    
    for(i = 0; i < wordsSize; i++)
    {
        //1、对字符串数组中的每一个字符比着翻译表翻译成对应的摩尔斯密码
        while(words[i][j] != NULL)
        {
            strcat(translate[i],morse[words[i][j] - 'a']);
            j++;
        }
        //2、每翻译出一个字符串，则把这个字符串和之前翻译出的字符串挨个做比较，
        //如果字符串相等，则将相等标志位flag置1，表明这个字符串不是唯一字符串，
        //对该结果不计数，并跳出该循环（因为已经遇到了和j相同的字符串了，说明
        //字符串j已经不是唯一字符串了，所以没必要再对其做任何比较了）。
        if(i > 0)
        {
            for(j = 0; j < i; j++)
            {
                if(strcmp(translate[i],translate[j]) == 0)
                {
                    flag = 1;
                    break;
                }
            }
        }
        
        //3、对唯一字符串（与它之前的字符串都不相等的字符串）进行个数计数。
        if(flag == 0)
            cnt++;
        
        //4、标志位及单词的字母索引位置位，开始新的循环。
        flag = 0;
        j = 0;
    }
    
    return cnt;
}

/*
本质就是对字符串进行不断地翻译与对比，采用最基本的流程即可。
*/
