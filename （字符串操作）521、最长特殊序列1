/*
给定两个字符串，你需要从这两个字符串中找出最长的特殊序列。最长特殊序列定义如下：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。

子序列可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。

输入为两个字符串，输出最长特殊序列的长度。如果不存在，则返回 -1。

示例 :

输入: "aba", "cdc"
输出: 3
解析: 最长特殊序列可为 "aba" (或 "cdc")

说明:

    两个字符串长度均小于100。
    字符串中的字符仅含有 'a'~'z'。
*/
int findLUSlength(char * a, char * b)
{
    int a_len = strlen(a);
    int b_len = strlen(b);
    
    if(strcmp(a,b) == 0)
        return -1;
    else
        return (a_len > b_len) ? a_len : b_len;
}
/*
这道题是干什么的？？？？？
以下题解参考评论区。

两字符串 A、B，若长度 Alen 大于 Blen，A 便不能由 B 删除某些字符得到，结果便是 Alen。 
若 Alen 等于 Blen，判断 A、B 是否相等，若相等便没有最长子序列，因为无论 A 的什么子序列，都可以在 B 中找到相应的子序列。
这时要返回-1。 若 A、B 不相等，则 A 肯定不能由 B 删除字符后得到，因为再删除会变短，不可能再相等，
那么最长的特殊序列就是两个字符串之中一个，因为长度相等，返回任一者长度即可。
*/
