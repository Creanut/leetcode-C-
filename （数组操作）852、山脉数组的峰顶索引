/*
我们把符合下列属性的数组 A 称作山脉：

A.length >= 3
存在 0 < i < A.length - 1 使得A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1]
给定一个确定为山脉的数组，返回任何满足 A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1] 的 i 的值。

 

示例 1：

输入：[0,1,0]
输出：1
示例 2：

输入：[0,2,1,0]
输出：1
 

提示：

3 <= A.length <= 10000
0 <= A[i] <= 10^6
A 是如上定义的山脉
*/

int peakIndexInMountainArray(int* A, int ASize)
{
    int index = 0;
    
    for(int i = 1; i <= ASize - 2; i++)
    {
        int d_pre,d_next; 
        d_pre = A[i] - A[i-1];
        d_next = A[i] - A[i+1];
        if(d_pre > 0 && d_next > 0)
        {
            index = i;
            break;
        }
    }
    
    return index;
}

/*
由于给定的数组是山脉，所以按照定义，一个数组中就只有一个峰值。
为了找到这个峰值，直接从头遍历数组元素不断进行相邻元素做差比较即可。
*/
