/*
给定一个非负整数 c ，你要判断是否存在两个整数 a 和 b，使得 a2 + b2 = c。

示例1:

输入: 5
输出: True
解释: 1 * 1 + 2 * 2 = 5

 

示例2:

输入: 3
输出: False
*/

bool judgeSquareSum(int c)
{
    long a = 0;
    long b = sqrt(c);
    long sum = 0;
    
    while(a <= b)
    {
        sum = a * a + b * b;
        if(sum == c)
            return true;
        else if(sum < c)
            a++;
        else
            b--;
    }
    
    return false;
}

/*
这道题就是夹逼查找。
首先是平方数之和，则两个数肯定都不大于这个数的开方，因此只需要在0~这个数的开方之间查找满足题意的
数字即可。一个指针从0开始向后递增，另一个指针从开方开始向前递减。
如果平方和小于给定的数字，说明小的数太小，向后移动；
如果平方和大于给定的数字，说明大的数太大，向前移动。
找到符合题目要求的平方和后，结束循环，否则说明不是平方数之和。
*/
